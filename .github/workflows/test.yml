name: 🧪 Test Portfolio

permissions:
  contents: read

on:
  pull_request:
    branches: [main, master]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'

jobs:
  test-frontend:
    name: 🟢 Test Frontend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install dependencies
        run: |
          cd frontend
          npm ci

      - name: 🔍 Lint code
        run: |
          cd frontend
          npm run lint

      - name: 🏗️ Test build
        run: |
          cd frontend
          npm run build

      - name: 📊 Build summary
        run: |
          echo "✅ Frontend tests passed!"
          cd frontend
          echo "📦 Build size:"
          du -sh .next 2>/dev/null || echo "No .next directory found"
          echo ""
          echo "📋 Build output:"
          ls -la .next/ 2>/dev/null || echo "No .next directory found"

  test-backend:
    name: 🐍 Test Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📦 Install dependencies
        run: |
          cd ollama-proxy
          pip install -r requirements.txt

      - name: 🔍 Lint Python code
        run: |
          cd ollama-proxy
          python -m flake8 main.py --max-line-length=120 --ignore=E501,W503

      - name: ✅ Backend summary
        run: |
          echo "✅ Backend tests passed!"
          echo "🐍 Python version: $(python --version)"
          echo "📦 Installed packages:"
          cd ollama-proxy && pip list | grep -E "(fastapi|uvicorn|requests)" || echo "Core packages installed"

  test-docker:
    name: 🐳 Test Docker Build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Only run on manual trigger
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏗️ Test Frontend Docker build
        run: |
          cd frontend
          docker build -t test-frontend .
          echo "✅ Frontend Docker image built successfully"

      - name: 🏗️ Test Proxy Docker build
        run: |
          cd ollama-proxy
          docker build -t test-proxy .
          echo "✅ Proxy Docker image built successfully"

      - name: 📊 Docker summary
        run: |
          echo "✅ All Docker builds successful!"
          echo "📦 Images built:"
          docker images | grep test- | head -5

  summary:
    name: 📋 Test Summary
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    if: always()
    
    steps:
      - name: ✅ Success summary
        if: needs.test-frontend.result == 'success' && needs.test-backend.result == 'success'
        run: |
          echo "🎉 All tests passed!"
          echo "✅ Frontend: Build and lint successful"
          echo "✅ Backend: Lint successful"
          echo ""
          echo "🚀 Ready for deployment!"

      - name: ❌ Failure summary
        if: needs.test-frontend.result == 'failure' || needs.test-backend.result == 'failure'
        run: |
          echo "❌ Some tests failed!"
          echo "Frontend: ${{ needs.test-frontend.result }}"
          echo "Backend: ${{ needs.test-backend.result }}"
          echo ""
          echo "🔍 Please check the logs above for details"
          exit 1
